extends layout

block headContent
	+title(`Address ${address}`)

block content
	if (result && result.validateaddress)
		if (!result.validateaddress.isvalid)
			div.alert.alert-danger.mb-huge
				h1.h6.font-weight-bold Invalid Address
				span.text-monospace.word-wrap  #{address}

		else
			div.mt-5.mt-sm-3
			h3.text-bold Address
				br
				small.text-monospace.word-wrap  #{address}

			if (payoutAddressForMiner)
				div.alert.alert-primary.shadow-sm.pb-0
					div.float-left(style="width: 50px; height: 50px; font-size: 18px;")
						i.fas.fa-certificate.fa-2x(style="margin-top: 10px;")

					h4.alert-heading.h6.font-weight-bold !{coinConfig.nameHtml} Fun

					p
						span This looks like a miner payout address for 
						span.font-weight-bold  #{payoutAddressForMiner.name} 
						if (coinConfig.miningPoolsConfigUrls.length > 1)
							span (see the configurations: 
							each item, index in coinConfig.miningPoolsConfigUrls
								if (index > 0)
									span ,
								a(href=item) config ##{index + 1}
							span )
						else
							span (see the configuration 
							a(href=coinConfig.miningPoolsConfigUrls[0]) here
							span )

			else if (global.specialAddresses[address] && global.specialAddresses[address].type == "fun")
				div.alert.alert-primary.shadow-sm.pb-0
					div.float-left(style="width: 50px; height: 50px; font-size: 18px;")
						i.fas.fa-certificate.fa-2x(style="margin-top: 10px;")

					h4.alert-heading.h6.font-weight-bold !{coinConfig.nameHtml} Fun

					// special address info
					- var saInfo = global.specialAddresses[address].addressInfo;
					if (saInfo.alertBodyHtml)
						p
							span !{saInfo.alertBodyHtml}

							if (saInfo.referenceUrl && saInfo.referenceUrl.trim().length > 0 && saInfo.alertBodyHtml.indexOf(saInfo.referenceUrl) == -1)
								span
									a(href=saInfo.referenceUrl) Read more

					else
						p
							span #{saInfo.summary}

							if (saInfo.referenceUrl && saInfo.referenceUrl.trim().length > 0)
								span
									a(href=saInfo.referenceUrl) Read more

			div.row
				div.col-12.col-xl-6
					div.card.mb-3.shadow-sm
						div.card-header(style="min-height:430px;")
							.d-flex.justify-content-between
								h3.h6.mb-0 Summary
									if (config.addressApi)
										small.text-muted.border-dotted.ml-2(title=`Some details for this address were queried from ${config.addressApi}` data-toggle="tooltip") Trust Note
								button.btn.btn-primary.btn-sm.mb-1(type="button", data-toggle="modal", data-target="#qr-code-modal")
									i.fas.fa-qrcode.mr-2
									span QR CODE			
							hr

							//- div.row
							//- 		div.summary-split-table-label QR Code
							//- 		div.summary-split-table-content.text-monospace
							//- 			a(href=address)
							//- 				img(src=addressQrCodeUrl, alt=address, style="border: solid 1px #ccc;")
							div.row
								div.col-md-12

									if (balance)
										if (balance.conflictedResults)
											div.row
												div.summary-split-table-label Balance
												div.summary-split-table-content.text-monospace
													span.text-warning Conflicted ElectrumX Results

													each item in balance.conflictedResults
														- var currencyValue = item.confirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug


										else
											div.row
												div.summary-split-table-label Balance
												div.summary-split-table-content.text-monospace
													- var currencyValue = balance.result.confirmed / coinConfig.baseCurrencyUnit.multiplier;
													include includes/value-display.pug

											if (balance.unconfirmed)
												div.row
													div.summary-split-table-label Unconfirmed
													div.summary-split-table-content.text-monospace
														- var currencyValue = balance.unconfirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug
							
									if (addressDetails && addressDetails.balanceSat)
										div.row
											div.summary-split-table-label Balance
											div.summary-split-table-content.text-monospace
												- var currencyValue = new Decimal(String(addressDetails.balanceSat)).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
												include includes/value-display.pug


									if (addressObj.hasOwnProperty("type"))
										div.row
											div.summary-split-table-label Type
											div.summary-split-table-content.text-monospace #{addressObj.type}
									if (addressDetails && addressDetails.txCount)
										div.row
											div.summary-split-table-label Transactions
											div.summary-split-table-content.text-monospace #{addressDetails.txCount.toLocaleString()}

									if (result.validateaddress.scriptPubKey)
										div.row
											div.summary-split-table-label Script Public Key
											div.summary-split-table-content.text-monospace #{result.validateaddress.scriptPubKey}

									if (firstSeenTransaction && firstSeenTransaction.confirmations > 0)
										div.row
											div.summary-split-table-label First Seen
											div.summary-split-table-content.text-monospace
												if (getblockchaininfo)
													span Block ##{(getblockchaininfo.blocks - firstSeenTransaction.confirmations).toLocaleString()}
												else
													a(href=("/block/" + firstSeenTransaction.blockhash)) #{firstSeenTransaction.blockhash}

												br

												span #{moment.utc(new Date(firstSeenTransaction.time * 1000)).format("Y-MM-DD HH:mm:ss")} utc
												- var timeAgoTime = firstSeenTransaction.time;
												include includes/time-ago.pug



									
							div.row
								div.col-md-12
									if (electrumScripthash)
										div.row
											div.summary-split-table-label Scripthash
											div.summary-split-table-content.text-monospace #{electrumScripthash}

									- var x = result.validateaddress;
									- var flagNames = ["Is Valid?", "Is Script?", "Is Mine?", "Is Watch-Only?"];
									- var flags = [x.isvalid, x.isscript, x.ismine, x.iswatchonly];

									each flagName, index in flagNames
										if flags[index] === undefined
											- continue
										div.row
											div.summary-split-table-label #{flagName}
											div.summary-split-table-content.text-monospace
												if (flags[index])
													i.fas.fa-check.text-success
												else
													i.fas.fa-times.text-warning

					
						
				div.col-12.col-xl-6
					div.card.mb-3.shadow-sm
						div.card-header(style="min-height:430px;")
							h3.h6.mb-0 Address Token Balances
								if (config.addressApi)
										small.text-muted.border-dotted.ml-2(title=`Some details for this address were queried from ${config.addressApi}` data-toggle="tooltip") Trust Note
							hr
							//- .input-group.mb-3
							//- 		input.form-control(type='text' placeholder="Search Tokens" aria-label="Search Tokens" aria-describedby='button-addon2')
							//- 		button#button-addon2.btn.btn-outline-primary(type='button') Search
							.list-group(style="max-height: 295px;overflow-y:scroll;height:295px;")
								if(tokenData)
									each token in tokenData
										if(token.group && token.confirmedBalance > 0)
											list-group-item.card-header
												.d-flex.w-100.justify-content-between.row
													col-md-6
														if(token.is_nft)
															- var filepath = token.files.length > 0 ? utils.removePublicFromFile(token.files[0].path) : null
															if(filepath)
																img.m-1.rounded(src=filepath, alt="", width=24)
															small
																a(href=("/token/" + token.group)) #{token.name ? token.name : token.group}
														else
															img.m-1.rounded(src="/img/tokens/"+ token.group + ".png", alt="", width=24)
															small
																a(href=("/token/" + token.group)) #{token.name} (#{token.genesis.ticker})
													col-md-6
														if (token.confirmedBalance >= 0)
															if(token.confirmedBalanceFormatted)
																p.mb-1 #{utils.addThousandsSeparators(token.confirmedBalanceFormatted)} 
															else
																p.mb-1 #{utils.addThousandsSeparators(token.confirmedBalance)}
														if(token.unconfirmedBalance > 0)
															if(token.unconfirmedBalanceFormatted)
																small Unconfirmed: #{utils.addThousandsSeparators(token.unconfirmedBalanceFormatted)}
															else
																small Unconfirmed: #{utils.addThousandsSeparators(token.unconfirmedBalance)}
								else
									list-group-item.card-header
										.d-flex.w-100.justify-content-center.row
											span No Xena tokens at this address


			ul.nav.nav-tabs
				li.nav-item
					a.nav-link.active(data-toggle="tab", href="#tab-transactions", role="tab") Transactions
				li.nav-item
					a.nav-link(data-toggle="tab", href="#tab-json", role="tab") JSON
				li.nav-item
					a.nav-link(data-toggle="tab", href="#tab-script", role="tab") Script

			div.tab-content
				div.tab-pane.active(id="tab-transactions", role="tabpanel")
					div.row
						div.col-md-12
							div.card.mb-3.shadow-sm
								div.card-body
											div.clearfix
												div.float-left
													h3.h6.mb-0
														if (addressDetails && addressDetails.txCount)
															if (addressDetails.txCount == 1)
																span 1 Transaction
															else
																span #{addressDetails.txCount.toLocaleString()} Transactions
														else
															span Transactions

														if (config.addressApi)
															if (config.addressApi == "electrumx")
																small.text-muted.border-dotted.ml-2(title=`The list of transaction IDs for this address was queried from ElectrumX (using the configured server(s))` data-toggle="tooltip") Trust Note
															else
																small.text-muted.border-dotted.ml-2(title=`The list of transaction IDs for this address was queried from ${config.addressApi}` data-toggle="tooltip") Trust Note

												if (!crawlerBot && txids && txids.length > 1 && addressApiSupport.sortDesc && addressApiSupport.sortAsc)
													div.float-right
														a.pull-right.dropdown-toggle(href="#", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false")
															if (sort == "desc")
																span Newest First
															else
																span Oldest First

														div.dropdown-menu.dropdown-menu-right
															a.dropdown-item(href=("/address/" + address))
																if (sort == "desc")
																	i.fa.fa-check 
																span  Newest First
															a.dropdown-item(href=("/address/" + address + "?sort=asc"))
																if (sort != "desc")
																	i.fa.fa-check 
																span  Oldest First

												else if (txids && txids.length > 1 && addressApiSupport.sortDesc && !addressApiSupport.sortAsc)
													div.float-right
														span.text-muted Newest First

											hr

											if (conflictedTxidResults)
												div.alert.alert-warning.pb-0
													div.float-left(style="width: 55px; height: 50px; font-size: 18px;")
														i.fas.fa-exclamation-triangle.fa-2x(style="margin-top: 10px;")
													h4.alert-heading.h6.font-weight-bold Trust Warning
													p
														span The transaction history for this address was requested from mulitple ElectrumX servers and the results did not match. The results below were obtained only from 
														span.font-weight-bold #{electrumHistory.server}


											if (addressApiError && addressApiError.error && addressApiError.error.code && addressApiError.error.code == -32600)
												span Failed to retrieve transaction history from ElectrumX. See
												a(href="https://github.com/janoside/btc-rpc-explorer/issues/67") Issue #67
												span for more information.


											else if (addressApiError && addressApiError.userText)
												div.text-danger Error: #{addressApiError.userText}
											else if (addressDetailsErrors && addressDetailsErrors.length > 0)
												// Electrs return the same kind of error for get_history and get_balance
												- var set = new Set(addressDetailsErrors.map(item => JSON.stringify(item)));
												- var uniqueAddressDetailsErrors = [...set].map(item => JSON.parse(item));
												each err, errIndex in uniqueAddressDetailsErrors
													if (err.e && err.e && err.e.message == "history too large")
														span Failed to retrieve transaction history from ElectrumX because this address is involved in too many transactions (more than ElectrumX currently supports retrieving). See
														a(href="https://github.com/janoside/btc-rpc-explorer/issues/67") Issue #67
														span for more information.

													else if (err.e && err.e.error && err.e.error.message == "failed to get confirmed status")
														span Failed to retrieve transaction history from ElectrsCash server. As a workaround, consider starting ElectrsCash server with a custom --txid-limit argument, to support longer transaction histories.

													else if (err == "No address API configured")
														span No address API is configured. See 
														a(href="https://gitlab.com/xena/nex-rpc-explorer/blob/master/.env-sample") the example configuration file 
														span for help setting up an address API if desired.
													else
														span.text-danger Error retrieving transaction history (##{errIndex + 1})
														pre
															code.json.bg-light #{JSON.stringify(err, null, 4)}

											else if (transactions.length == 0)
												span No transactions found

											each tx, txIndex in transactions
												div.card.shadow-sm(class=((txIndex < (transactions.length - 1) || txids.length > limit) ? "mb-3" : ""))
													div.card-header.text-monospace.clearfix
														div.float-left.mr-0
															if (sort == "desc")
																span ##{(addressDetails.txCount - offset - txIndex).toLocaleString()}
															else
																span ##{(offset + txIndex + 1).toLocaleString()}
															span &ndash;

														div.row
															div.col-md-8
																if (tx && tx.txid)
																	a(href=("/tx/" + tx.txid)) #{tx.txid}

																	if (global.specialTransactions && global.specialTransactions[tx.txid])
																		span
																		a(data-toggle="tooltip", title=(coinConfig.name + " Fun! See transaction for details"))
																			i.fas.fa-certificate.text-primary

																br

																if (addrGainsByTx[tx.txid])
																	- var currencyValue = addrGainsByTx[tx.txid];
																	span.text-success +
																		include includes/value-display.pug

																	if (addrLossesByTx[tx.txid])
																		span  /

																if (addrLossesByTx[tx.txid])
																	- var currencyValue = addrLossesByTx[tx.txid];
																	span.text-danger -
																		include includes/value-display.pug

															div.col-md-4
																div.text-md-right
																	if (tx.time)
																		- var timestampHuman = tx.time;
																		include includes/timestamp-human.pug

																		br

																		- var timeAgoTime = tx.time;
																		small.text-muted (
																			include includes/time-ago-text.pug
																			span ago)

																	else
																		span.text-danger Unconfirmed

													div.card-body
														- var txInputs = txInputsByTransaction[tx.txid];
														- var blockHeight = blockHeightsByTxid[tx.txid];
														- var txIOHighlightAddress = address;

														include includes/transaction-io-details.pug

											if (!crawlerBot && addressDetails && addressDetails.txCount > limit)
												- var txCount = addressDetails.txCount;
												- var pageNumber = offset / limit + 1;
												- var pageCount = Math.floor(txCount / limit);
												- if (pageCount * limit < txCount) {
													- pageCount++;
												- }
												- var paginationUrlFunction = function(x) {
													- return paginationBaseUrl + "&limit=" + limit + "&offset=" + ((x - 1) * limit);
												- }

												hr.mt-3

												include includes/pagination.pug

				div.tab-pane(id="tab-json", role="tabpanel")
					div.card.shadow-sm.mb-3
						div.card-body
							h4.h6.mb-0 validateaddress
							hr

							div.highlight
								pre
									code.json.bg-light(data-lang="json") #{JSON.stringify(result.validateaddress, null, 4)}

					if (addressDetails)
						div.card.shadow-sm.mb-3
							div.card-body
								h4.h6.mb-0 addressDetails
								hr

								div.highlight
									pre
										code.json.bg-light #{JSON.stringify(addressDetails, null, 4)}

				//- div.tab-pane(id="tab-script", role="tabpanel")
				//- 	div.card-body.tab-card.mb-3
				//- 		h5.mb-3.text-bold Script
				//- 		if (scriptAddress != null)
				//- 			h5.mb-3.text-bold Xena Script
				//- 			div.highlight
				//- 				pre
				//- 					code.json.bg-light(data-lang="json") #{JSON.stringify(scriptAddress, utils.bigIntToRawJSON, 4)}
			div(style="margin-bottom: 30px;")
				include ./includes/qr-code-modal.pug

